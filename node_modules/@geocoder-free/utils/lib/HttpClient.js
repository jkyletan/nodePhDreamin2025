"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Post = Post;
exports.Get = Get;
exports.GetUrl = GetUrl;

var _nodeFetch = _interopRequireDefault(require("node-fetch"));

var _fetchJsonp = _interopRequireDefault(require("fetch-jsonp"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createHeader() {
  return Promise.resolve({
    Accept: 'application/json'
  });
}

function getFetchFunc(forceNodeFetch) {
  if (forceNodeFetch) {
    return _nodeFetch.default;
  }

  if (typeof window === 'undefined') {
    return _nodeFetch.default;
  }

  return _fetchJsonp.default;
}

async function Post(url, data, forceNodeFetch = false) {
  const headers = await createHeader();
  const fetch = getFetchFunc(forceNodeFetch);
  const res = await fetch(url, {
    credentials: 'same-origin',
    headers,
    method: 'POST',
    body: data
  });
  const result = await res.json();
  return result;
}

async function Get(url, returnType = 'json', forceNodeFetch = false) {
  const headers = await createHeader();
  let result;

  if (returnType === 'json') {
    // type=json returns fetch-jsonp
    const fetch = getFetchFunc(forceNodeFetch);
    const res = await fetch(url, {
      headers,
      method: 'GET'
    });
    result = res.json();
  } else {
    const res = await (0, _nodeFetch.default)(url, {
      headers,
      method: 'GET'
    });
    result = await res.text();
  }

  return result;
}

async function GetUrl(url) {
  const headers = await createHeader();
  const res = await (0, _nodeFetch.default)(url, {
    headers,
    method: 'GET'
  });
  return res.url;
}