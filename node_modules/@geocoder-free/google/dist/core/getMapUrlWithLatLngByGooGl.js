"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _removePostCode = _interopRequireDefault(require("@geocoder-free/utils/ja/removePostCode"));

var _utils = require("@geocoder-free/utils");

var _getAddressByGooGl = _interopRequireDefault(require("./getAddressByGooGl"));

var _getMapUrlWithLatLngByAddress = _interopRequireDefault(require("./getMapUrlWithLatLngByAddress"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Get google map url with latitude&longitude by goo.gl/xxx
 *
 * If goo.gl contains geocoding, returns [latitude, longitude],
 *
 * If not, using address in goo.gl and get geocoding by address
 *
 * @param {*string} url
 */
function getMapUrlWithLatLngByGooGl(url) {
  return (0, _getAddressByGooGl.default)(url).then(addressOrLatlng => {
    // try get as if it is decimal
    let result = (0, _utils.getLatLngByDecimalStr)(addressOrLatlng);

    if (result == null) {
      // addressOrLatlng is not decimal, try dms
      result = (0, _utils.getLatLngByDMSStr)(addressOrLatlng);
    }

    if (result == null) {
      // is address string
      return (0, _getMapUrlWithLatLngByAddress.default)((0, _removePostCode.default)(addressOrLatlng));
    }

    return Promise.resolve(result);
  });
}

var _default = getMapUrlWithLatLngByGooGl;
exports.default = _default;
module.exports = exports.default;