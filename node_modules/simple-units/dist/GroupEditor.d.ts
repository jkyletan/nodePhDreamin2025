import FlexibleUnit from "./FlexibleUnit.js";
import Group from "./Group.js";
import Unit from "./Unit.js";
/**
 * Editor of a {@link Group}. Provides methods to add, remove and overwrite units.
 */
export default class GroupEditor {
    private group;
    /**
     * Creates a group editor.
     * @hidden
     * @param group
     */
    constructor(group: Group);
    /**
     * Removes any unit except the given ones.
     * @param units the units that shouldn't get removed
     */
    select(...units: string[]): void;
    /**
     * Adds the given units to the related group. Units having the same _default notation_ (the notation that gets returned on
     * calling `unit.toString()`) are overwritten.
     * @param units units to add
     */
    add(...units: (FlexibleUnit | Unit)[]): void;
    /**
     * Removes the given units from the related group. Only a single notation per unit is required.
     * @param units units to remove
     */
    remove(...units: string[]): void;
}
//# sourceMappingURL=GroupEditor.d.ts.map